server:
  port: 8081

spring:
  application:
    name: authors
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
        trace: false
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 

# JWT 설정
jwt:
  secret: ${JWT_SECRET:your-super-secret-jwt-key-for-production-use-this-should-be-very-long-and-random}
  expiration: ${JWT_EXPIRATION:86400000}

---

spring:
  config:
    activate:
      on-profile: default
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        # 발행할 토픽 (Producer)
        author-review-out:
          destination: author.review.v1
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug


server:
  port: 8082

---

spring:
  config:
    activate:
      on-profile: docker
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
        trace: false
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde

      bindings:
        # 발행할 토픽 (Producer)
        author-review-out:
          group: authors
          destination: author.review.v1
          contentType: application/json